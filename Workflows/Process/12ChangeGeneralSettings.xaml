<Activity mc:Ignorable="sap sap2010" x:Class="_01OpenMoodleCourseSettings" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1098,3025</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>_01OpenMoodleCourseSettings_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="46">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Interop</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="03 Change Time Settings-Sequence" sap:VirtualizedContainerService.HintSize="494,2860" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="examDateAsDateTime" />
      <Variable x:TypeArguments="s:DateTime" Name="examOpeningTimeAsDateTime" />
      <Variable x:TypeArguments="s:DateTime" Name="examClosingTimeAsDateTime" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Attach Browser 'iexplore.exe  Moodle'" sap:VirtualizedContainerService.HintSize="452,2768" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="3192b105f0bbd2f0a88ed3a2187fb478" Selector="&lt;html url='https://moodle1.zhaw.ch*' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="418,2622" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Convert Exam Date-Object to DateTime (Assign)" sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="s:DateTime">[examDateAsDateTime]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime("05/15/2020 00:00:00")]</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence DisplayName="Change Course Opening Settings-Sequence" sap:VirtualizedContainerService.HintSize="376,1022" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_startdate_day'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_3" Text="[Day(examDateAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="defb9cec-0672-4bf1-a57b-53be5f03e4a6" InformativeScreenshot="1c16449e8b8aad5f8ecdcfcc2a74ef5a" Selector="&lt;webctrl id='id_startdate_day' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_startdate_month'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_4" Text="[Month(examDateAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4d90a480-c0ff-4dc8-8d70-4be704346652" InformativeScreenshot="3b3b9e9ce888ccfd044db467fe86c2c8" Selector="&lt;webctrl id='id_startdate_month' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_startdate_year'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_5" Text="[Year(examDateAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ecc42e7f-95b3-4819-858f-81efa59d3521" InformativeScreenshot="2e9b74e4180115840f812bb9ecc29af3" Selector="&lt;webctrl id='id_startdate_year' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
              <Assign DisplayName="Convert Opening-Time-Object to DateTime (Assign)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[examOpeningTimeAsDateTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime("12:00:00")]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_startdate_hour'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_6" Text="[Hour(examOpeningTimeAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0601b32b-d5f4-4159-8257-ad38a252ad7b" InformativeScreenshot="19b545459f6743295720a164affbb4e2" Selector="&lt;webctrl id='id_startdate_hour' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_startdate_minute'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_7" Text="[Minute(examOpeningTimeAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e4e4309d-57b5-4a29-82d3-3891fbe2c317" InformativeScreenshot="78c51ac49c2d8f59598bfe3299835a96" Selector="&lt;webctrl id='id_startdate_minute' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
            </Sequence>
            <Sequence DisplayName="Change Course Closing Settings-Sequence" sap:VirtualizedContainerService.HintSize="376,1368" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Convert Exam Date-Object to DateTime (Assign)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[examDateAsDateTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime("06/30/2020 00:00:00")]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:Check AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" Action="Check" DisplayName="Check 'INPUT  id_enddate_enabled'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Check_2">
                <ui:Check.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="be8c8f1f-7686-4040-940a-a3b3390f68a1" InformativeScreenshot="216b5145b7da620eb98caf350305a95f" Selector="&lt;webctrl id='id_enddate_enabled' tag='INPUT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Check.Target>
              </ui:Check>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_enddate_day'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_15" Text="[Day(examDateAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="defb9cec-0672-4bf1-a57b-53be5f03e4a6" InformativeScreenshot="1c16449e8b8aad5f8ecdcfcc2a74ef5a" Selector="&lt;webctrl id='id_enddate_day' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_enddate_month'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_16" Text="[Month(examDateAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4d90a480-c0ff-4dc8-8d70-4be704346652" InformativeScreenshot="3b3b9e9ce888ccfd044db467fe86c2c8" Selector="&lt;webctrl id='id_enddate_month' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_enddate_year'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_17" Text="[Year(examDateAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ecc42e7f-95b3-4819-858f-81efa59d3521" InformativeScreenshot="2e9b74e4180115840f812bb9ecc29af3" Selector="&lt;webctrl id='id_enddate_year' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
              <Assign DisplayName="Convert Closing-Time-Object to DateTime (Assign)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[examClosingTimeAsDateTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(in_TransactionItem.Item("exam_time_end"))]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Add Overrun Time to End Time (Assign)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:DateTime">[examClosingTimeAsDateTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:DateTime">[examClosingTimeAsDateTime.AddMinutes(Double.Parse(in_Config("CourseEndOverrunTime").ToString))]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_enddate_hour'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_18" Text="[Hour(examClosingTimeAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0601b32b-d5f4-4159-8257-ad38a252ad7b" InformativeScreenshot="19b545459f6743295720a164affbb4e2" Selector="&lt;webctrl id='id_enddate_hour' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
              <ui:SetValue AlterIfDisabled="{x:Null}" ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Set Text 'SELECT  id_enddate_minute'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SetValue_19" Text="[Minute(examClosingTimeAsDateTime).ToString]">
                <ui:SetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e4e4309d-57b5-4a29-82d3-3891fbe2c317" InformativeScreenshot="78c51ac49c2d8f59598bfe3299835a96" Selector="&lt;webctrl id='id_enddate_minute' tag='SELECT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SetValue.Target>
              </ui:SetValue>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
  </Sequence>
</Activity>